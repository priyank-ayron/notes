{"version":3,"sources":["Main.js","Sidebar.js","App.js","index.js"],"names":["Main","activeNote","onUpdateNote","onEditField","field","value","Date","now","className","type","id","placeholder","title","onChange","e","target","autoFocus","body","Sidebar","notes","onAddNote","onDeleteNote","setActiveNote","sortedNotes","sort","a","b","lastModified","class","onClick","map","note","key","substr","toLocaleDateString","hour","minute","App","useState","localStorage","JSON","parse","setNotes","useEffect","setItem","stringify","newNote","uuid","filter","find","updatedNote","updatedNotesArray","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6NA2CeA,EAzCF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACpBC,EAAc,SAACC,EAAOC,GAAW,IAAD,EACpCH,EAAa,2BACRD,GADO,uBAETG,EAAQC,GAFC,6BAGIC,KAAKC,OAHT,MAOd,OAAKN,EAGH,sBAAKO,UAAU,WAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,uBACEA,UAAU,gBACVC,KAAK,OACLC,GAAG,QACHC,YAAY,aACZN,MAAOJ,EAAWW,MAClBC,SAAU,SAACC,GAAD,OAAOX,EAAY,QAASW,EAAEC,OAAOV,QAC/CW,WAAS,IAEX,0BACER,UAAU,gBACVE,GAAG,OACHC,YAAY,0BACZN,MAAOJ,EAAWgB,KAClBJ,SAAU,SAACC,GAAD,OAAOX,EAAY,OAAQW,EAAEC,OAAOV,aAGlD,sBAAKG,UAAU,wBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+BP,EAAWW,QAC1C,cAAC,IAAD,CAAeJ,UAAU,mBAAzB,SACGP,EAAWgB,aAzBI,qBAAKT,UAAU,iBAAf,6BC+BXU,MAxCf,YAMI,IALFC,EAKC,EALDA,MACAC,EAIC,EAJDA,UACAC,EAGC,EAHDA,aACApB,EAEC,EAFDA,WACAqB,EACC,EADDA,cAEMC,EAAcJ,EAAMK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,aAAeF,EAAEE,gBAC5D,OACE,sBAAKnB,UAAU,cAAf,UACE,sBAAKoB,MAAM,qBAAX,UACE,uCACA,wBAAQC,QAAST,EAAjB,oBAEF,qBAAKQ,MAAM,oBAAX,SACGL,EAAYO,KAAI,SAACC,GAAD,OACf,sBACEH,MAAK,2BAAsBG,EAAKC,MAAQ/B,GAAc,UACtD4B,QAAS,kBAAMP,EAAcS,EAAKC,MAFpC,UAIE,sBAAKJ,MAAM,qBAAX,UACE,iCAASG,EAAKnB,QACd,wBAAQiB,QAAS,SAACf,GAAD,OAAOO,EAAaU,EAAKC,MAA1C,uBAEF,4BAAID,EAAKd,MAAQc,EAAKd,KAAKgB,OAAO,EAAG,KAAO,QAC5C,wBAAOzB,UAAU,YAAjB,0BACgB,IACb,IAAIF,KAAKyB,EAAKJ,cAAcO,mBAAmB,QAAS,CACvDC,KAAM,UACNC,OAAQ,eAGZ,mCCuBGC,MAnDf,WAAgB,IAAD,EACaC,mBACxBC,aAAapB,MAAQqB,KAAKC,MAAMF,aAAapB,OAAS,IAF3C,mBACNA,EADM,KACCuB,EADD,OAIuBJ,oBAAS,GAJhC,mBAINrC,EAJM,KAIMqB,EAJN,KAqCb,OA/BAqB,qBAAU,WACRJ,aAAaK,QAAQ,QAASJ,KAAKK,UAAU1B,MAC5C,CAACA,IA8BF,sBAAKX,UAAU,MAAf,UACE,cAAC,EAAD,CACEW,MAAOA,EACPC,UA/BY,WAChB,IAAM0B,EAAU,CACdd,IAAKe,MACLnC,MAAO,gBACPK,KAAM,GACNU,aAAcrB,KAAKC,OAErBmC,EAAS,CAACI,GAAF,mBAAc3B,MAyBlBE,aAtBe,SAACW,GACpBU,EAASvB,EAAM6B,QAAO,SAACjB,GAAD,OAAUA,EAAKC,MAAQA,OAsBzC/B,WAAYA,EACZqB,cAAeA,IAEjB,cAAC,EAAD,CAAMrB,WArBDkB,EAAM8B,MAAK,SAAClB,GAAD,OAAUA,EAAKC,MAAQ/B,KAqBJC,aAlBlB,SAACgD,GACpB,IAAMC,EAAoBhC,EAAMW,KAAI,SAACC,GACnC,OAAIA,EAAKC,MAAQkB,EAAYlB,IACpBkB,EAEFnB,KAETW,EAASS,UCrCbC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.54224049.chunk.js","sourcesContent":["import ReactMarkdown from \"react-markdown\";\n\nconst Main = ({ activeNote, onUpdateNote }) => {\n  const onEditField = (field, value) => {\n    onUpdateNote({\n      ...activeNote,\n      [field]: value,\n      lastModified: Date.now(),\n    });\n  };\n\n  if (!activeNote) return <div className=\"no-active-note\">No Active Note</div>;\n\n  return (\n    <div className=\"app-main\">\n      <div className=\"app-main-note-edit\">\n        <input\n          className=\"app-main-note\"\n          type=\"text\"\n          id=\"title\"\n          placeholder=\"Note Title\"\n          value={activeNote.title}\n          onChange={(e) => onEditField(\"title\", e.target.value)}\n          autoFocus\n        />\n        <textarea\n          className=\"app-main-note\"\n          id=\"body\"\n          placeholder=\"Write your note here...\"\n          value={activeNote.body}\n          onChange={(e) => onEditField(\"body\", e.target.value)}\n        />\n      </div>\n      <div className=\"app-main-note-preview\">\n        <h1 className=\"preview-title\">{activeNote.title}</h1>\n        <ReactMarkdown className=\"markdown-preview\">\n          {activeNote.body}\n        </ReactMarkdown>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nfunction Sidebar({\n  notes,\n  onAddNote,\n  onDeleteNote,\n  activeNote,\n  setActiveNote,\n}) {\n  const sortedNotes = notes.sort((a, b) => b.lastModified - a.lastModified);\n  return (\n    <div className=\"app-sidebar\">\n      <div class=\"app-sidebar-header\">\n        <h1>Notes</h1>\n        <button onClick={onAddNote}>Add</button>\n      </div>\n      <div class=\"app-sidebar-notes\">\n        {sortedNotes.map((note) => (\n          <div\n            class={`app-sidebar-note ${note.key === activeNote && \"active\"}`}\n            onClick={() => setActiveNote(note.key)}\n          >\n            <div class=\"sidebar-note-title\">\n              <strong>{note.title}</strong>\n              <button onClick={(e) => onDeleteNote(note.key)}>Delete</button>\n            </div>\n            <p>{note.body && note.body.substr(0, 100) + \"...\"}</p>\n            <small className=\"note-meta\">\n              Last modified{\" \"}\n              {new Date(note.lastModified).toLocaleDateString(\"en-GB\", {\n                hour: \"2-digit\",\n                minute: \"2-digit\",\n              })}\n            </small>\n            <hr></hr>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport uuid from \"react-uuid\";\nimport Main from \"./Main\";\nimport Sidebar from \"./Sidebar\";\n\nfunction App() {\n  const [notes, setNotes] = useState(\n    localStorage.notes ? JSON.parse(localStorage.notes) : []\n  );\n  const [activeNote, setActiveNote] = useState(false);\n\n  useEffect(() => {\n    localStorage.setItem(\"notes\", JSON.stringify(notes));\n  }, [notes]);\n\n  const onAddNote = () => {\n    const newNote = {\n      key: uuid(),\n      title: \"Untitled Note\",\n      body: \"\",\n      lastModified: Date.now(),\n    };\n    setNotes([newNote, ...notes]);\n  };\n\n  const onDeleteNote = (key) => {\n    setNotes(notes.filter((note) => note.key !== key));\n  };\n\n  const getActiveNote = () => {\n    return notes.find((note) => note.key === activeNote);\n  };\n\n  const onUpdateNote = (updatedNote) => {\n    const updatedNotesArray = notes.map((note) => {\n      if (note.key === updatedNote.key) {\n        return updatedNote;\n      }\n      return note;\n    });\n    setNotes(updatedNotesArray);\n  };\n  return (\n    <div className=\"App\">\n      <Sidebar\n        notes={notes}\n        onAddNote={onAddNote}\n        onDeleteNote={onDeleteNote}\n        activeNote={activeNote}\n        setActiveNote={setActiveNote}\n      ></Sidebar>\n      <Main activeNote={getActiveNote()} onUpdateNote={onUpdateNote}></Main>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}